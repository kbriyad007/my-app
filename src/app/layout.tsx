import React from "react";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

// Import components and providers
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
import CartModal from "@/components/CartModal";  // <-- Add this line
import { AuthProvider } from "@/hooks/useAuth";
import { CartProvider, useCart } from "@/context/cart"; // Import useCart for FloatingCartIcon

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Floating cart icon component inside RootLayout for demo purpose
function FloatingCartIcon({ onClick, count }: { onClick: () => void; count: number }) {
  return (
    <button
      onClick={onClick}
      aria-label="Open Cart"
      className="fixed bottom-6 right-6 z-50 p-4 rounded-full bg-blue-600 text-white shadow-lg hover:bg-blue-700 transition"
      style={{ width: 56, height: 56 }}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        strokeWidth={2}
        className="w-6 h-6 mx-auto"
      >
        <path strokeLinecap="round" strokeLinejoin="round" d="M3 3h2l.4 2M7 13h10l4-8H5.4" />
        <circle cx="7" cy="21" r="1" />
        <circle cx="17" cy="21" r="1" />
      </svg>
      {count > 0 && (
        <span className="absolute -top-1 -right-1 bg-red-500 text-xs rounded-full w-5 h-5 flex items-center justify-center font-semibold">
          {count}
        </span>
      )}
    </button>
  );
}

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  // Create a wrapper component to access Cart context hook inside RootLayout
  function CartWrapper() {
    const { items } = useCart();
    const [cartOpen, setCartOpen] = React.useState(false);

    return (
      <>
        {children}
        <FloatingCartIcon onClick={() => setCartOpen(true)} count={items.length} />
        <CartModal
          isOpen={cartOpen}
          onClose={() => setCartOpen(false)}
          onUpdateQuantity={(id, qty) => console.log("Update", id, qty)}
          onRemoveItem={(id) => console.log("Remove", id)}
          onCheckout={() => console.log("Checkout")}
        />
      </>
    );
  }

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <AuthProvider>
          <CartProvider>
            <Navbar />
            <CartWrapper />
            <Footer />
          </CartProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
